name: Simple CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-basic:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install basic dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install PyQt6
        pip install torch --index-url https://download.pytorch.org/whl/cpu
        pip install transformers huggingface-hub requests psutil

    - name: Run basic tests
      run: |
        pytest tests/test_config.py -v
      env:
        QT_QPA_PLATFORM: offscreen

    - name: Test application import
      run: |
        python -c "import sys; sys.path.append('src'); from src.core.config import Config; print('Config OK')"
        python -c "import sys; sys.path.append('src'); from src.core.ollama_client import SevenXEngine; print('Engine OK')"

  build-exe:
    runs-on: windows-latest
    needs: test-basic
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pillow
        pip install PyQt6
        pip install torch --index-url https://download.pytorch.org/whl/cpu
        pip install transformers huggingface-hub requests psutil

    - name: Create icon
      run: python create_icon.py

    - name: Build executable with optimized settings
      run: |
        pyinstaller --onefile --windowed --name "SevenX Studio" ^
          --icon=assets/icon.ico ^
          --add-data "src;src" ^
          --hidden-import=torch ^
          --hidden-import=transformers ^
          --hidden-import=huggingface_hub ^
          --hidden-import=PyQt6.QtCore ^
          --hidden-import=PyQt6.QtWidgets ^
          --hidden-import=PyQt6.QtGui ^
          --exclude-module=matplotlib ^
          --exclude-module=scipy ^
          --exclude-module=pandas ^
          main.py

    - name: Get file size
      run: |
        $size = (Get-Item "dist/SevenX Studio.exe").Length / 1MB
        echo "Executable size: $([math]::Round($size, 1)) MB"

    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: SevenX-Studio-v1.0.0-Windows
        path: dist/SevenX Studio.exe

    - name: Create portable package
      run: |
        mkdir SevenX_Studio_Portable
        copy "dist\SevenX Studio.exe" SevenX_Studio_Portable\
        copy README.md SevenX_Studio_Portable\
        copy LICENSE SevenX_Studio_Portable\
        copy INSTALL.md SevenX_Studio_Portable\
        echo "SevenX Studio v1.0.0 - Versao Portatil" > SevenX_Studio_Portable\INFO.txt
        echo "" >> SevenX_Studio_Portable\INFO.txt
        echo "Execute 'SevenX Studio.exe' para iniciar" >> SevenX_Studio_Portable\INFO.txt
        echo "Veja README.md para instrucoes completas" >> SevenX_Studio_Portable\INFO.txt

    - name: Upload portable package
      uses: actions/upload-artifact@v3
      with:
        name: SevenX-Studio-Portable-v1.0.0
        path: SevenX_Studio_Portable/

  create-release:
    runs-on: ubuntu-latest
    needs: build-exe
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Release Candidate')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download executable
      uses: actions/download-artifact@v3
      with:
        name: SevenX-Studio-v1.0.0-Windows
        path: ./release/
    
    - name: Download portable package
      uses: actions/download-artifact@v3
      with:
        name: SevenX-Studio-Portable-v1.0.0
        path: ./portable/
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: SevenX Studio v1.0.0
        body: |
          # ðŸš€ SevenX Studio v1.0.0 - Primeira Release Oficial!
          
          ## âœ¨ Funcionalidades
          - ðŸ¤– Motor de IA prÃ³prio independente
          - ðŸ’¬ Chat com modelos DialoGPT e GPT-2
          - ðŸ“Š Monitor de sistema em tempo real
          - ðŸŽ¨ Interface moderna PyQt6
          - ðŸ”§ ConfiguraÃ§Ãµes avanÃ§adas
          
          ## ðŸ“¦ Downloads
          - **SevenX Studio.exe** - ExecutÃ¡vel standalone
          - **SevenX_Studio_Portable** - VersÃ£o portÃ¡til completa
          
          ## ðŸŽ¯ Como Usar
          1. Baixe o executÃ¡vel
          2. Execute "SevenX Studio.exe"
          3. VÃ¡ para aba "Modelos" e baixe DialoGPT Small
          4. Volte para "Chat" e comece a conversar!
          
          ## ðŸ“‹ Requisitos
          - Windows 10/11
          - 4GB+ RAM
          - ConexÃ£o com internet (para download de modelos)
          
          Veja README.md para instruÃ§Ãµes completas.
        draft: false
        prerelease: false
        
    - name: Upload Release Asset - Executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/SevenX Studio.exe
        asset_name: SevenX-Studio-v1.0.0-Windows.exe
        asset_content_type: application/octet-stream